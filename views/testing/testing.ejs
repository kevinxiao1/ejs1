<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"> 
		<meta name="viewport" content="width=device-width, initial-scale=1.0"> 
		<title>Creative Button Styles </title>
		<meta name="description" content="Creative Button Styles  - Modern and subtle styles &amp; effects for buttons" />
		<meta name="keywords" content="button styles, css3, modern, flat button, subtle, effects, hover, web design" />
		<meta name="author" content="Codrops" />
		<link rel="shortcut icon" href="../favicon.ico"> 
		<link rel="stylesheet" type="text/css" href="button/css/default.css" />
		<link rel="stylesheet" type="text/css" href="button/css/component.css" />
		<script src="button/js/modernizr.custom.js"></script>
		<script src="https://cdnjs.cloudflare.com/ajax/libs/pizzicato/0.6.4/Pizzicato.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
        <script> //PIZZICATO
            var sawtoothWave = new Pizzicato.Sound({ 
            source: 'wave',
            options: {
                type: 'sawtooth',
                volume : 1
            }
        });

        function volumechange() {
            var vol = document.getElementById('volume').value
            sawtoothWave.volume = vol / 1000;
        }

        function test() {
            // var stat = sawtoothWave
            // stat.on('play', function() {
            //     stat.pause();
            //     console.log('paused')
            // })
            // stat.on('pause', function() {
            //     stat.play();
            //     console.log('played')
            // })
            // console.log('clicked')
            // console.log(sawtoothWave)

            var button = document.getElementsByClassName('btn-testplay')[0].value
            console.log(button)

            if (button == 'false') {
                sawtoothWave.play()
                document.getElementsByClassName('btn-testplay')[0].value = 'true'
                console.log(document.getElementsByClassName('btn-testplay')[0].value)
            }
            else{
                sawtoothWave.pause()
                document.getElementsByClassName('btn-testplay')[0].value = 'false'
                console.log(document.getElementsByClassName('btn-testplay')[0].value)
            }
        }

        function playfile() {
            console.log('tes');
            var file = new Pizzicato.Sound('./audio/yas.mp3', function (params) {
                file.play()
            });
        }
        </script>
        <script> //SLOBS
            //     axios.get('https://streamlabs.com/api/v1.0/authorize', {
            //     params : {
            //         response_type : 'code',
            //         client_id : '1rnzFihkHYQ7hsOvgveBmxyJYs9vKRaTrmK0rDf4',
            //         redirect_uri : 'http://localhost:3000/users',
            //         scope : ''
            //         }
            //     })
            // .then(function (response) {
            //     // handle success
            //     console.log(response);
            // })
            // .catch(function (error) {
            //     // handle error
            //     console.log(error);
            // })
            // .then(function () {
            //     // always executed
            // });
            function slobstoken(){
                let params = new URLSearchParams(location.search);
                let acode = params.get('code');
            axios.post('https://streamlabs.com/api/v1.0/token', 
            {
                params : {                    
                    grant_type : 'authorization_code',
                    client_id : '1rnzFihkHYQ7hsOvgveBmxyJYs9vKRaTrmK0rDf4',
                    client_secret : 'UG98Y7cXdNB08fHLjFbRdUXjTCxsgYhwafB0kL5j',
                    redirect_uri : 'http://localhost:8080'
                    }
                })
            .then(function (response) {
                // handle success
                console.log(response);
            })
            .catch(function (error) {
                // handle error
                console.log(error);
            })
            .then(function () {
                // always executed
            });
        }

        function slobsuser() {
            axios.get('https://streamlabs.com/api/v1.0/user', 
            {
                params : {                    
                    access_token: '9F48E0584828E58B63DA'
                    }
                })
            .then(function (response) {
                // handle success
                console.log(response);
            })
            .catch(function (error) {
                // handle error
                console.log(error);
            })
            .then(function () {
                // always executed
            });
        }

        function slobsauth() {
            axios.get('https://streamlabs.com/api/v1.0/authorize', {
                params : {
                    response_type : 'code',
                    client_id : '1rnzFihkHYQ7hsOvgveBmxyJYs9vKRaTrmK0rDf4',
                    redirect_uri : 'http://localhost:8080',
                    scope : 'profiles.write'
                    }
                })
            .then(function (response) {
                // handle success
                console.log(response);
            })
            .catch(function (error) {
                // handle error
                console.log(error);
            })
            .then(function () {
                // always executed
            });
        }
        function slobsalert() {
            axios.post('https://streamlabs.com/api/v1.0/alerts', {
                params : {
                    access_token : '9F48E0584828E58B63DA',
                    type : 'follow'
                    }
                })
            .then(function (response) {
                // handle success
                console.log(response);
            })
            .catch(function (error) {
                // handle error
                console.log(error);
            })
            .then(function () {
                // always executed
            });
        }

        

        const main = async() => {
            // connect and authenticate
            const client = await SlobsClient.connect('http://127.0.0.1:59650/api', '1f73d5125294ecb1f15dfa3f491836e54c171e5');

            // get a list of scenes
            const scenes = await client.request('ScenesService', 'getScenes');
            console.log('list of scenes', scenes);

            // set volume of all current scene audio sources
            const audioSources = await client.request('AudioService', 'getSourcesForCurrentScene');

            for (let i = 0; i < audioSources.length; ++i) {
            // set the deflection (volume) to half
            await client.request(audioSources[i].resourceId, 'setDeflection', 1.0);
            }

            // subscribe to events
            // await client.subscribe('ScenesService', 'sceneSwitched', (activeScene: any) => {
            // console.log('scene switch event', activeScene);
            // });

        }
        </script>
	</head>
	<body>
		<div class="container">
			<!-- Top Navigation -->
			<div class="codrops-top clearfix">
				<a class="codrops-icon codrops-icon-prev" href="http://tympanus.net/Tutorials/WebAudioStylophone/"><span>Previous Demo</span></a>
				<span class="right"><a class="codrops-icon codrops-icon-drop" href="http://tympanus.net/codrops/?p=15430"><span>Back to the Codrops Article</span></a></span>
			</div>
			<header>
				<h1>Creative Button Styles <span>Modern and subtle styles &amp; effects for buttons (hover and click)</span></h1>	
			</header>
			<section class="color-1">
				<p class="text note-touch">Note that on mobile devices the effects might not all work as intended.</p>
				<p>
					<button class="btn btn-1 btn-1a " onclick="slobstoken()">test token</button>
					<button class="btn btn-1 btn-1b btn-testplay" onclick="test()">Test Play</button>
                    <input id="volume" type="range" min="0" max="1000" name="" oninput="volumechange()"/>
					<button class="btn btn-1 btn-1c">Button</button>
				</p>
				<p>
					<button class="btn btn-1 btn-1d" onclick="slobsuser()">show user</button>
					<button class="btn btn-1 btn-1e" onclick="slobsauth()">authenticate API</button>
					<button class="btn btn-1 btn-1f" onclick="slobsalert()">show alerts</button>
				</p>
			</section>
			<section class="color-2">
				<p>
					<button class="btn btn-2 btn-2a">Button</button>
					<button class="btn btn-2 btn-2b">Button</button>
				</p>
				<p>
					<button class="btn btn-2 btn-2c">Button</button>
					<button class="btn btn-2 btn-2d">Button</button>
				</p>
				<p>
					<button class="btn btn-2 btn-2e">Button</button>
					<button class="btn btn-2 btn-2f">Button</button>
				</p>
				<p>
					<button class="btn btn-2 btn-2g">Button</button>
					<button class="btn btn-2 btn-2h">Button</button>
				</p>
				<p>
					<button class="btn btn-2 btn-2i">Yes</button>
					<button class="btn btn-2 btn-2j">No</button>
				</p>
			</section>
			<section class="color-3">
				<p>
					<button class="btn btn-3 btn-3a icon-cart">Add to cart</button>
					<button class="btn btn-3 btn-3b icon-star-2">Bookmark</button>
				</p>
				<p>
					<button class="btn btn-3 btn-3c icon-heart-2">Favorite</button>
				</p>
				<p>
					<button class="btn btn-3 btn-3d icon-cog">Settings</button>
					<button class="btn btn-3 btn-3e icon-arrow-right">Send data</button>
				</p>
			</section>
			<section class="color-4">
				<p>
					<button class="btn btn-4 btn-4a icon-arrow-right">Continue</button>
					<button class="btn btn-4 btn-4b icon-arrow-left">Return</button>
				</p>
				<p>
					<button class="btn btn-4 btn-4c icon-arrow-right">Continue</button>
					<button class="btn btn-4 btn-4d icon-arrow-left">Return</button>
				</p>
			</section>
			<section class="color-5">
				<p>
					<button class="btn btn-5 btn-5a icon-cart"><span>Add to cart</span></button>
					<button class="btn btn-5 btn-5a icon-remove"><span>Delete</span></button>
					<button class="btn btn-5 btn-5a icon-cog"><span>Settings</span></button>
				</p>
				<p>
					<button class="btn btn-5 btn-5b icon-cart"><span>Add to cart</span></button>
					<button class="btn btn-5 btn-5b icon-remove"><span>Delete</span></button>
					<button class="btn btn-5 btn-5b icon-cog"><span>Settings</span></button>
				</p>
			</section>
			<section class="color-6">
				<p>
					<button class="btn btn-6 btn-6a">Button</button>
					<button class="btn btn-6 btn-6b">Button</button>
					<button class="btn btn-6 btn-6c">Button</button>
				</p>
				<p>
					<button class="btn btn-6 btn-6d">Button</button>
					<button class="btn btn-6 btn-6e">Button</button>
					<button class="btn btn-6 btn-6f">Button</button>
				</p>
				<p>
					<button class="btn btn-6 btn-6g">Button</button>
					<button class="btn btn-6 btn-6h">Button</button>
					<button class="btn btn-6 btn-6i">Button</button>
				</p>
				<p>
					<button class="btn btn-6 btn-6j">Button</button>
					<button class="btn btn-6 btn-6k">Button</button>
					<button class="btn btn-6 btn-6l">Button</button>
				</p>
			</section>
			<section class="color-7" id="btn-click">
				<p class="text">Click on the buttons to see the effect</p>
				<p>
					<button class="btn btn-7 btn-7a icon-truck">Order item</button>
					<button class="btn btn-7 btn-7b icon-envelope">Send message</button>
				</p>
				<p>
					<button class="btn btn-7 btn-7c btn-icon-only icon-arrow-right">Submit</button>
					<button class="btn btn-7 btn-7d btn-icon-only icon-remove">Empty</button>
				</p>
				<p>
					<button class="btn btn-7 btn-7e btn-icon-only icon-heart">Like</button>
					<button class="btn btn-7 btn-7f btn-icon-only icon-star">Fav</button>
					<button class="btn btn-7 btn-7g btn-icon-only icon-plus">Add</button>
				</p>
				<p>
					<button class="btn btn-7 btn-7h icon-envelope">Submit form</button>
					<button class="btn btn-7 btn-7h icon-envelope">Submit form</button>
				</p>
				<div id="trash-effect" class="trash-effect">
					<button class="btn btn-7 btn-7i btn-icon-only icon-remove-2">Remove</button>
					<div class="icon-file"></div>
					<div class="icon-file"></div>
					<div class="icon-file"></div>
				</div>
			</section>
			<section class="color-8">
				<p class="perspective">
					<button class="btn btn-8 btn-8a">3D Button</button>
				</p>
				<p class="perspective">
					<button class="btn btn-8 btn-8b">3D Button</button>
				</p>
				<br />
				<p class="perspective">
					<button class="btn btn-8 btn-8c">3D Button</button>
				</p>
				<p class="perspective">
					<button class="btn btn-8 btn-8d">3D Button</button>
				</p>
				<p class="text">Click the following buttons to see the effect:</p>
				<p class="perspective">
					<button class="btn btn-8 btn-8e">3D Button</button>
				</p>
				<p class="perspective">
					<button class="btn btn-8 btn-8f">3D Button</button>
				</p>
				<br />
				<p class="perspective">
					<button class="btn btn-8 btn-8g">3D Button</button>
				</p>
				<p class="perspective">
					<button class="btn btn-8 btn-8g">3D Button</button>
				</p>
			</section>
		</div><!-- /container -->
		<script src="js/classie.js"></script>
		<script>
			var buttons7Click = Array.prototype.slice.call( document.querySelectorAll( '#btn-click button' ) ),
				buttons9Click = Array.prototype.slice.call( document.querySelectorAll( 'button.btn-8g' ) ),
				totalButtons7Click = buttons7Click.length,
				totalButtons9Click = buttons9Click.length;

			buttons7Click.forEach( function( el, i ) { el.addEventListener( 'click', activate, false ); } );
			buttons9Click.forEach( function( el, i ) { el.addEventListener( 'click', activate, false ); } );

			function activate() {
				var self = this, activatedClass = 'btn-activated';

				if( classie.has( this, 'btn-7h' ) ) {
					// if it is the first of the two btn-7h then activatedClass = 'btn-error';
					// if it is the second then activatedClass = 'btn-success'
					activatedClass = buttons7Click.indexOf( this ) === totalButtons7Click-2 ? 'btn-error' : 'btn-success';
				}
				else if( classie.has( this, 'btn-8g' ) ) {
					// if it is the first of the two btn-8g then activatedClass = 'btn-success3d';
					// if it is the second then activatedClass = 'btn-error3d'
					activatedClass = buttons9Click.indexOf( this ) === totalButtons9Click-2 ? 'btn-success3d' : 'btn-error3d';
				}

				if( !classie.has( this, activatedClass ) ) {
					classie.add( this, activatedClass );
					setTimeout( function() { classie.remove( self, activatedClass ) }, 1000 );
				}
			}

			document.querySelector( '.btn-7i' ).addEventListener( 'click', function() {
				classie.add( document.querySelector( '#trash-effect' ), 'trash-effect-active' );
			}, false );
		</script>
	</body>
</html>